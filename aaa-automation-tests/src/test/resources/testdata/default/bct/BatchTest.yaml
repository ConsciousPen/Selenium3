BCT_BTCH_Automated_Renewal_Premium_Calculation_007: {
  PreValidation: "SELECT p.policynumber,p.riskstatecd FROM pasadm.POLICYSUMMARY P,  pasadm.QUOTEVERSION QV WHERE P.TXTYPE        IN ('renewal') AND P.POLICYSTATUSCD = 'dataGather' AND P.cancelnoticeind = '0' AND ( P.MANUALRENEWIND = 0 OR P.MANUALRENEWIND   IS NULL) AND (CASE WHEN P.PRODUCTCD = 'AAA_SS' AND P.RISKSTATECD IN ('VA') THEN P.EFFECTIVE - 52  WHEN P.PRODUCTCD = 'AAA_SS' AND P.RISKSTATECD IN ('MD') THEN P.EFFECTIVE - 55          WHEN P.PRODUCTCD = 'AAA_SS' AND P.RISKSTATECD IN ('MT') THEN P.EFFECTIVE - 55          WHEN P.PRODUCTCD = 'AAA_SS' AND P.RISKSTATECD IN ('NJ','CT','PA','SD') THEN P.EFFECTIVE - 69 WHEN P.PRODUCTCD = 'AAA_SS' AND P.RISKSTATECD IN ('KY') THEN P.EFFECTIVE - 84          WHEN P.PRODUCTCD = 'AAA_PUP_SS' AND P.RISKSTATECD = 'CA' THEN P.EFFECTIVE - 58          WHEN P.PRODUCTCD = 'AAA_PUP_SS' AND P.RISKSTATECD = 'MD' THEN P.EFFECTIVE - 60  WHEN P.PRODUCTCD IN ('AAA_SS', 'AAA_PUP_SS') THEN P.EFFECTIVE - 45          END) BETWEEN TO_DATE('/EXECDATE/', 'DD-MON-YY') - 2 AND TO_DATE('/EXECDATE/', 'DD-MON-YY') AND ( P.CONVMANUALEXCEPTIONIND = 0 OR P.CONVMANUALEXCEPTIONIND   IS NULL) AND ((P.CONVTYPE              IS NULL  OR P.CONVTYPE                 <> 'MIN')  OR (P.CONVTYPE                 = 'MIN' AND P.RENEWALCYCLE             >1)) AND P.ID                       = QV.POLICYID UNION select p.policynumber,p.riskstatecd FROM pasadm.POLICYSUMMARY P,  pasadm.QUOTEVERSION QV WHERE P.TXTYPE        IN ('renewal') AND P.POLICYSTATUSCD = 'dataGather'  AND ( P.MANUALRENEWIND = 0 OR P.MANUALRENEWIND   IS NULL) AND (CASE WHEN P.PRODUCTCD IN ('AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATECD IN ('MD') THEN P.EFFECTIVE - 60   WHEN P.PRODUCTCD IN ('AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATECD IN ('CT') THEN P.EFFECTIVE - 73 WHEN P.PRODUCTCD IN ('AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATECD IN ('KY') THEN P.EFFECTIVE - 80 WHEN P.PRODUCTCD IN ('AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATECD IN ('MT','WY') THEN P.EFFECTIVE - 80        WHEN P.PRODUCTCD = 'AAA_HO_CA' AND P.RISKSTATECD IN ('CA') THEN P.EFFECTIVE - 58        WHEN P.PRODUCTCD = 'AAA_HO_SS' AND P.RISKSTATECD NOT IN ('MD', 'CA','CT','KY','MT','WY') THEN P.EFFECTIVE - 45          END ) BETWEEN TO_DATE('/EXECDATE/', 'DD-MON-YY') - 2 AND TO_DATE('/EXECDATE/', 'DD-MON-YY') AND P.ID = QV.POLICYID AND (P.AAARENEWALTIMELINEIND = 2 OR P.AAARENEWALTIMELINEIND   = 3 )  UNION select p.policynumber,p.riskstatecd FROM pasadm.POLICYSUMMARY P,   pasadm.QUOTEVERSION QV WHERE (P.TXTYPE IN ('renewal')) AND P.PRODUCTCD  ='AAA_CSA' AND P.POLICYSTATUSCD  ='dataGather' AND P.TIMEDPOLICYSTATUSCD ='dataGather' AND P.CURRENTREVISIONIND =0 AND (P.CONVMANUALEXCEPTIONIND =0 OR P.CONVMANUALEXCEPTIONIND IS NULL) AND (P.MANUALRENEWIND =0 OR P.MANUALRENEWIND IS NULL) AND P.ID =QV.POLICYID AND P.EFFECTIVE - 63 BETWEEN TO_DATE('/EXECDATE/', 'DD-MON-YY') - 4 AND TO_DATE('/EXECDATE/', 'DD-MON-YY') AND (P.CLAIMSORDERDATE IS NOT NULL) AND EXTRACT(DAY FROM P.EFFECTIVE-P.CLAIMSORDERDATE)<=63 AND (EXISTS   (SELECT 1   FROM pasadm.POLICYDETAIL P2   INNER JOIN pasadm.DRIVER D   ON P2.ID=D.POLICYDETAIL_ID   INNER JOIN pasadm.AAAREPORTORDERENTITY MVRORDER ON D.ID =MVRORDER.DRIVERENTITY_ID   WHERE P2.ID =P.POLICYDETAIL_ID  AND (MVRORDER.RECEIPTDATE IS NOT NULL)  AND EXTRACT(DAY FROM P.EFFECTIVE-MVRORDER.RECEIPTDATE)<=63   ))",
  PostValidation: "SELECT P.POLICYNUMBER FROM pasadm.POLICYSUMMARY P,   pasadm.QUOTEVERSION QV WHERE P.TXTYPE ='renewal' AND P.POLICYSTATUSCD ='rated' AND trunc(P.UPDATEDON)>= TO_DATE('/EXECDATE/', 'DD-MON-YY') AND P.CURRENTREVISIONIND     =0 AND P.TIMEDPOLICYSTATUSCD    ='rated' AND P.PREVSTATUSCD = 'dataGather' AND (P.MANUALRENEWIND        =0 OR P.MANUALRENEWIND         IS NULL) AND (P.CONVMANUALEXCEPTIONIND=0 OR P.CONVMANUALEXCEPTIONIND IS NULL) AND P.ID =QV.POLICYID",
}

BCT_BTCH_Automated_Renewal_Proposed_Offer_009: {
  PreValidation: "select p.policynumber, p.riskstatecd FROM pasadm.PolicySummary p, pasadm.QuoteVersion qv WHERE p.txType in ('renewal') AND p.policyStatusCd = 'rated' AND p.timedpolicystatuscd = 'rated' AND (case when p.productcd = 'AAA_SS' and p.riskstatecd = 'MT' then trunc(p.effective - 45)          when p.productcd = 'AAA_SS' and p.riskstatecd = 'MD' then trunc(p.effective - 35)          when p.productcd IN ('AAA_PUP_SS', 'AAA_HO_CA') and p.riskstatecd = 'CA' then trunc(p.effective - 48)          when p.productcd IN ( 'AAA_PUP_SS', 'AAA_HO_SS') and p.riskstatecd = 'MD' then trunc(p.effective - 50)          else trunc(p.effective - 35)     end = '/EXECDATE/' )  AND (p.manualRenewInd = 0 or p.manualrenewind is null) AND (p.donotrenewind = 0 or p.donotrenewind is null) AND p.id = qv.policyId  and qv.txtype = 'renewal' group by p.policyNumber,p.riskstatecd",
  PostValidation: "SELECT p.policyNumber FROM pasadm.PolicySummary p ,pasadm.QuoteVersion qv     WHERE p.TXTYPE = 'renewal'    AND (p.policyStatusCd = 'proposed' or  p.policyStatusCd = 'companyDeclined')      AND  (trunc(p.RENEWALOFFERTIMESTAMP)>=to_date('/EXECDATE/', 'DD-MON-YY') or trunc(p.updatedon)>=to_date('/EXECDATE/', 'DD-MON-YY')  )               AND p.currentRevisionInd = 0     AND (p.timedPolicyStatusCd ='proposed' or   p.timedPolicyStatusCd ='companyDeclined')  AND p.id = qv.policyId    AND (p.manualRenewInd =0 or p.manualrenewind is null)",
}

BCT_BTCH_Automated_Renewal_Generate_Offer_Document_009: {
  PreValidation: "select p.policynumber, p.riskstatecd FROM pasadm.PolicySummary p, pasadm.QuoteVersion qv WHERE p.txType in ('renewal') AND p.policyStatusCd = 'rated' AND p.timedpolicystatuscd = 'rated' AND (case when p.productcd = 'AAA_SS' and p.riskstatecd = 'MT' then trunc(p.effective - 45)          when p.productcd = 'AAA_SS' and p.riskstatecd = 'MD' then trunc(p.effective - 47)          when p.productcd IN ('AAA_PUP_SS', 'AAA_HO_CA') and p.riskstatecd = 'CA' then trunc(p.effective - 48)          when p.productcd IN ( 'AAA_PUP_SS', 'AAA_HO_SS') and p.riskstatecd = 'MD' then trunc(p.effective - 50)          else trunc(p.effective - 35)     end) between to_date('/EXECDATE/', 'DD-MON-YY')-4 and to_date('/EXECDATE/', 'DD-MON-YY')  AND (p.manualRenewInd = 0 or p.manualrenewind is null) AND (p.donotrenewind = 0 or p.donotrenewind is null) AND p.id = qv.policyId  and qv.txtype = 'renewal' group by p.policyNumber,p.riskstatecd",
  PostValidation: "select B.policynumber from pasadm.AAADOCGENENTITY A, pasadm.policysummary B where A.entityid = B.id and A.eventname = 'RENEWAL_OFFER' and A.status like '%issued%'and trunc(A.creationdate) >= '/EXECDATE/'",
}

BCT_BTCH_Automated_Renewal_Image_Data_Gather_002: {
  PreValidation: "SELECT ps.policynumber, ps.riskstatecd from pasadm.policysummary ps ,pasadm.Quoteversion Q,pasadm.AAAPREFILLENTITY a where ps.id = Q.policyid AND CASE WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'KY' THEN TRUNC(ps.EFFECTIVE - 98) WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'MD'  THEN TRUNC(ps.EFFECTIVE - 78) WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'CA'  THEN TRUNC(ps.EFFECTIVE - 73)WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'KY' THEN TRUNC(ps.EFFECTIVE - 78) WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'MD'  THEN TRUNC(ps.EFFECTIVE - 78)WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'CT'  THEN TRUNC(ps.EFFECTIVE - 91)WHEN ps.productcd = 'AAA_HO_CA' and ps.RISKSTATECD = 'CA'  THEN TRUNC(ps.EFFECTIVE - 73)ELSE TRUNC(ps.EFFECTIVE - 63) END <= '/EXECDATE/' AND  CASE  WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'KY' THEN TRUNC(ps.EFFECTIVE - 92) WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'MD'  THEN TRUNC(ps.EFFECTIVE - 72) WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'CA'  THEN TRUNC(ps.EFFECTIVE - 67)WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'KY' THEN TRUNC(ps.EFFECTIVE - 78) WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'MD'  THEN TRUNC(ps.EFFECTIVE - 72) WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'CT'  THEN TRUNC(ps.EFFECTIVE - 85) WHEN ps.productcd = 'AAA_HO_CA' and ps.RISKSTATECD = 'CA'  THEN TRUNC(ps.EFFECTIVE - 67) ELSE TRUNC(ps.EFFECTIVE - 57) END >= '/EXECDATE/' and ps.txtype='renewal' and ps.lob in ('HOME','UMBRP') and  ps.ID = a.POLICY_ID and a.manualprefillind = '0'",
  PostValidation: "SELECT ps.POLICYNUMBER FROM pasadm.AAAPREFILLENTITY a,pasadm.POLICYSUMMARY ps WHERE ps.ID = a.POLICY_ID AND ps.LOB IN('HOME','UMBRP') AND a.RENEWALDATAREFRESHIND = 1 AND CASE WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'KY' THEN TRUNC(ps.EFFECTIVE - 98) WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'MD'  THEN TRUNC(ps.EFFECTIVE - 78) WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'CA'  THEN TRUNC(ps.EFFECTIVE - 73)WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'KY' THEN TRUNC(ps.EFFECTIVE - 78) WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'MD'  THEN TRUNC(ps.EFFECTIVE - 78) WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'CT'  THEN TRUNC(ps.EFFECTIVE - 91)WHEN ps.productcd = 'AAA_HO_CA' and ps.RISKSTATECD = 'CA'  THEN TRUNC(ps.EFFECTIVE - 73) ELSE TRUNC(ps.EFFECTIVE - 63) END <= '/EXECDATE/' AND  CASE  WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'KY' THEN TRUNC(ps.EFFECTIVE - 92) WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'MD'  THEN TRUNC(ps.EFFECTIVE - 72) WHEN ps.productcd = 'AAA_PUP_SS' and ps.RISKSTATECD = 'CA'  THEN TRUNC(ps.EFFECTIVE - 67)WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'KY' THEN TRUNC(ps.EFFECTIVE - 78) WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'MD'  THEN TRUNC(ps.EFFECTIVE - 72)WHEN ps.productcd = 'AAA_HO_SS' and ps.RISKSTATECD = 'CT'  THEN TRUNC(ps.EFFECTIVE - 85) WHEN ps.productcd = 'AAA_HO_CA' and ps.RISKSTATECD = 'CA'  THEN TRUNC(ps.EFFECTIVE - 67) ELSE TRUNC(ps.EFFECTIVE - 57) END >= '/EXECDATE/'",
}

BCT_BTCH_Automated_Renewal_Reports_Ordering_003: {
  PreValidation: "SELECT p.policynumber, p.riskstatecd FROM pasadm.PolicySummary p JOIN pasadm.QuoteVersion qv ON (qv.POLICYID = p.id) JOIN pasadm.OtherOrPriorPolicy o ON p.policydetail_id = o.policydetail_id AND o.productcd = 'membership' JOIN pasadm.MembershipSummaryEntity m ON (m.id = p.membershipsummary_id ) WHERE p.policyStatusCd IN ('dataGather') AND p.policyStatusCd IN ('dataGather') AND (p.policyFormCd IS NULL OR p.policyFormCd NOT IN ('CHOICE'))AND p.timedPolicyStatusCd IN ('dataGather') AND p.txType IN ('renewal') AND p.currentRevisionInd = 0 AND o.insurercd IN ('Pending','Yes')AND (p.importedFrom IS NULL OR p.importedFrom <> 'SIS' OR p.renewalCycle > 0)AND CASE WHEN P.PRODUCTCD = 'AAA_CSA' AND p.RISKSTATECD = 'CA' THEN trunc(P.EFFECTIVE-80)WHEN P.PRODUCTCD = 'AAA_SS' AND p.RISKSTATECD = 'KY' THEN trunc(P.EFFECTIVE-90) WHEN P.PRODUCTCD = 'AAA_SS' AND p.RISKSTATECD IN ('CT', 'PA', 'NJ', 'SD') THEN trunc(P.EFFECTIVE-75) ELSE trunc(P.EFFECTIVE-63) END= '/EXECDATE/' and o.INSURERCD  not like  'Pending'",
  PostValidation: "select A.policynumber from pasadm.policysummary A,pasadm.membershipsummaryentity B where A.membershipsummary_id = B.id and trunc(B.orderdate) >= '/EXECDATE/' AND A.txType ='renewal'",
}

BCT_BTCH_Automated_Renewal_Reports_Ordering_004: {
  PreValidation: "SELECT DISTINCT p.policynumber,  p.riskstatecd FROM pasadm.POLICYSUMMARY P INNER JOIN pasadm.POLICYDETAIL PD1 ON P.POLICYDETAIL_ID=PD1.ID INNER JOIN pasadm.DRIVER D1 ON PD1.ID=D1.POLICYDETAIL_ID,pasadm.QUOTEVERSION QV WHERE P.ID=QV.POLICYID AND P.POLICYSTATUSCD <>'issued' AND P.POLICYSTATUSCD <>'cancelled' AND P.POLICYSTATUSCD <> 'pendingCompletion' and P.LOB = 'AUTO' AND P.TXTYPE ='renewal' and P.TXTYPE <> 'cancellation' AND  CASE  WHEN P.RISKSTATECD = 'KY' THEN TRUNC(P.EFFECTIVE - 84) WHEN P.RISKSTATECD IN('SD','CT','NJ','PA') THEN TRUNC(P.EFFECTIVE - 69) ELSE TRUNC(P.EFFECTIVE - 48) END >= '/EXECDATE/' AND  CASE WHEN P.RISKSTATECD = 'KY' THEN TRUNC(P.EFFECTIVE - 90) WHEN P.RISKSTATECD IN('SD','CT','NJ','PA') THEN TRUNC(P.EFFECTIVE - 75) ELSE TRUNC(P.EFFECTIVE - 63) END <= '/EXECDATE/' AND (P.IMPORTEDFROM  IS NULL OR P.IMPORTEDFROM    <>'SIS' OR P.RENEWALCYCLE  >0)AND (ABS(EXTRACT(MONTH FROM P.EXPIRATION)-EXTRACT(MONTH FROM P.EFFECTIVE))=6 AND MOD(P.RENEWALCYCLE, 2) =0 OR ABS(EXTRACT(MONTH FROM P.EXPIRATION)-EXTRACT(MONTH FROM P.EFFECTIVE))  =0) AND NOT (EXISTS (SELECT 1 FROM pasadm.POLICYSUMMARY PS INNER JOIN pasadm.POLICYDETAIL PD2 ON PS.POLICYDETAIL_ID=PD2.ID INNER JOIN pasadm.DRIVER D ON PD2.ID=D.POLICYDETAIL_ID INNER JOIN pasadm.AAAREPORTORDERENTITY MVRORDER ON D.ID=MVRORDER.DRIVERENTITY_ID WHERE PS.ID  =P.ID AND (MVRORDER.ORDERDATE IS NOT NULL) AND CASE  WHEN P.RISKSTATECD = 'KY' THEN TRUNC(PS.EFFECTIVE)-90 WHEN P.RISKSTATECD IN('SD','CT','NJ','PA') THEN TRUNC(P.EFFECTIVE - 75) ELSE TRUNC(PS.EFFECTIVE)-63 END <= MVRORDER.ORDERDATE))",
  PostValidation: "select C.policynumber from pasadm.aaareportorderentity A, pasadm.driver B, pasadm.policysummary C where A.reporttype = 'mvr' and A.driverentity_id = B.id and B.policydetail_id = C.policydetail_id and trunc(A.orderdate) >= '/EXECDATE/' group by C.policynumber",
}

BCT_BTCH_Automated_Renewal_Reports_Ordering_005: {
  PreValidation: "select p.policynumber,p.riskstatecd from pasadm.PolicySummary p, pasadm.QuoteVersion qv WHERE p.id = qv.policyId AND p.policyStatusCd <> 'issued' AND p.txType = 'renewal' and case when p.productcd = 'AAA_SS' and p.riskstatecd = 'KY' then trunc(p.effective - 90) when p.productcd IN ('AAA_PUP_SS', 'AAA_HO_SS') and p.riskstatecd = 'MD' then trunc(p.effective - 78) when p.productcd = 'AAA_SS' and p.riskstatecd IN ('SD', 'PA','NJ','CT') then trunc(p.effective - 75) when p.productcd IN ('AAA_PUP_SS', 'AAA_HO_CA') and p.riskstatecd = 'CA' then trunc(p.effective - 73) else trunc(p.effective - 63) end = to_date('/EXECDATE/', 'DD-MON-YY') AND (p.importedFrom is NULL OR p.importedFrom <> 'SIS' OR p.renewalCycle > 0) AND (p.claimsOrderDate IS NULL  OR  case when p.productcd = 'AAA_SS' and p.riskstatecd = 'KY' then 90 when p.productcd IN ('AAA_PUP_SS', 'AAA_HO_SS') and p.riskstatecd = 'MD' then 78 when p.productcd = 'AAA_SS' and p.riskstatecd IN ('SD', 'PA','NJ','CT') then 75 when p.productcd IN ('AAA_PUP_SS', 'AAA_HO_CA') and p.riskstatecd = 'CA' then 73 else 63 end < trunc(p.effective)-trunc(p.claimsOrderDate))",
  PostValidation: "select p.policyNumber,trunc(p.claimsOrderDate) from pasadm.PolicySummary p, pasadm.QuoteVersion qv WHERE p.id = qv.policyId AND p.policyStatusCd  <> 'issued' AND p.txType = 'renewal' AND (p.importedFrom is NULL OR p.importedFrom <> 'SIS' OR p.renewalCycle > 0) and trunc(p.claimsOrderDate) >= to_date('/EXECDATE/', 'DD-MON-YY')",
}

BCT_BTCH_Expiration_Lapsed_Customer_Declined_015: {
  PreValidation: "select R.policynumber, R.riskstatecd FROM pasadm.POLICYSUMMARY R,   pasadm.QUOTEVERSION QV WHERE (R.IMPORTEDFROM          IS NULL OR R.IMPORTEDFROM            <> 'ADES' OR R.RENEWALCYCLE             > 1) AND R.TIMEDPOLICYSTATUSCD    IN ('initiated', 'dataGather', 'rated', 'proposed') AND R.POLICYSTATUSCD         IN ('initiated', 'dataGather', 'rated', 'proposed') AND R.CURRENTREVISIONIND      = '0' AND QV.POLICYID               = R.ID AND R.TXTYPE                  = 'renewal' AND QV.TXTYPE                 = 'renewal' AND (CASE WHEN R.PRODUCTCD = 'AAA_CSA' AND R.RISKSTATECD = 'CA' THEN TRUNC(R.EFFECTIVE + 10)          WHEN R.PRODUCTCD IN ('AAA_SS', 'AAA_HO_SS') AND R.RISKSTATECD = 'NY' THEN TRUNC(R.EFFECTIVE + 22)          ELSE TRUNC(R.EFFECTIVE + 15)     END) = TO_DATE('/EXECDATE/', 'DD-MON-YY') UNION select R.policynumber, R.riskstatecd FROM pasadm.POLICYSUMMARY R, pasadm.QUOTEVERSION QV    WHERE R.PRODUCTCD = 'AAA_CSA'  AND R.RISKSTATECD = 'CA' AND R.RENEWALCYCLE = 1 AND TRUNC(R.EFFECTIVE + 40) = TO_DATE('/EXECDATE/','DD-MON-YY') AND R.IMPORTEDFROM = 'ADES'   AND R.TIMEDPOLICYSTATUSCD IN ('initiated', 'datagather', 'rated', 'proposed')   AND R.POLICYSTATUSCD IN ('initiated', 'datagather', 'rated', 'proposed')  AND R.CURRENTREVISIONIND = 0   AND QV.POLICYID = R.ID   AND R.TXTYPE = 'renewal'   AND QV.TXTYPE = 'renewal' group by R.policynumber,R.riskstatecd",
  PostValidation: "select R.policynumber FROM pasadm.POLICYSUMMARY R,   pasadm.QUOTEVERSION QV  WHERE R.TIMEDPOLICYSTATUSCD    IN    ('customerDeclined') AND R.POLICYSTATUSCD         IN    ('customerDeclined') AND R.CURRENTREVISIONIND      = '0' AND QV.POLICYID               = R.ID AND R.TXTYPE                  = 'renewal' AND QV.TXTYPE      = 'renewal' AND R.PREVSTATUSCD IN   ('dataGather', 'rated', 'proposed') AND TRUNC(R.UPDATEDON) > = '/EXECDATE/'",
}

BCT_BTCH_Automated_Renewal_Preconversion_Renewal_Notice_022: {
  PreValidation: "SELECT DISTINCT  P.POLICYNUMBER,P.RISKSTATECD FROM pasadm.POLICYSUMMARY P, pasadm.QUOTEVERSION QV  WHERE (P.POLICYSTATUSCD = 'rated' OR P.CONVTYPE = 'MIN') AND P.RENEWALCYCLE = 1 AND QV.POLICYID = P.ID AND (P.DONOTRENEWIND = 0 OR P.DONOTRENEWIND IS NULL) AND (P.MANUALRENEWIND = 0 OR P.MANUALRENEWIND IS NULL) AND (P.AUTODEBTIND = 0 OR P.AUTODEBTIND IS NULL) AND (P.MANUALDEBTIND = 0 OR P.MANUALDEBTIND IS NULL) AND ((P.PRODUCTCD = 'AAA_HO_CA' AND to_date('/EXECDATE/', 'DD-MON-YY') = trunc(P.EFFECTIVE - 53)  AND  P.RISKSTATECD  IN ('CA')) OR (P.PRODUCTCD = 'AAA_SS' AND to_date('/EXECDATE/', 'DD-MON-YY') = trunc(P.EFFECTIVE - 40) AND    P.RISKSTATECD  IN ('AZ','OK','IN','NV','OH','UT','WY','MT','CO','PA','VA','KS','NJ','NY','OR','CT','DE','DC','KY','SD','ID','WV')) OR (P.PRODUCTCD = 'AAA_SS' AND  to_date('/EXECDATE/', 'DD-MON-YY') = trunc(P.EFFECTIVE - 50)  AND  P.RISKSTATECD  IN ('MD'))) AND NOT EXISTS (SELECT A.ID FROM AAADOCGENENTITY A  WHERE P.ID = A.ENTITYID AND A.EVENTNAME ='PRE_RENEWAL') AND P.IMPORTEDFROM IN ('SIS', 'HDES', 'MAIG')",
  PostValidation: "select policynumber from pasadm.policysummary A, pasadm.aaadocgenentity B where A.id = B.entityid and TRUNC(B.creationdate) >= '/EXECDATE/' and B.eventname = 'PRE_RENEWAL'",
}

BCT_BTCH_Automated_Renewal_DoNotRenew_030: {
  PreValidation: "SELECT PS.policynumber,PS.RISKSTATECD from (SELECT p.policynumber,p.RISKSTATECD,p.EXPIRATION,p.PRODUCTCD FROM pasadm.PolicySummary p WHERE p.policyStatusCd     = 'issued' AND p.currentRevisionInd   = 1 AND p.timedPolicyStatusCd IN ('inForce','inForcePending') AND p.doNotRenewInd = 1  )PS LEFT OUTER JOIN (SELECT LV.PRODUCTCD,LV.RISKSTATECD,LV.NONOFFERDAYSBEFOREEXP from pasadm.LOOKUPVALUE LV WHERE LV.LOOKUPLIST_ID IN(SELECT ID FROM pasadm.LOOKUPLIST WHERE LOOKUPNAME='AAAPolicyDoNotRenew') AND LV.RENEWALTYPE='ANN')L ON L.PRODUCTCD = PS.PRODUCTCD WHERE (L.RISKSTATECD = PS.RISKSTATECD OR  L.RISKSTATECD  IS NULL) AND  TRUNC(PS.EXPIRATION) >= TO_DATE('/EXECDATE/' ,'DD-MON-YY')+ L.NONOFFERDAYSBEFOREEXP AND TRUNC(PS.EXPIRATION) <= TO_DATE('/EXECDATE/' ,'DD-MON-YY') + L.NONOFFERDAYSBEFOREEXP",
  PostValidation: "select a.policynumber from pasadm.policysummary A, pasadm.aaadocgenentity B where A.id = B.entityid and  trunc(B.creationdate) >= '/EXECDATE/' and B.eventname = 'CANCEL_RENEWAL' ",
}

BCT_BTCH_Automated_Renewal_Generate_Mortgagee_Bill_Reminder_Notice_018: {
  PreValidation: "select p.policynumber, p.riskstatecd from  pasadm.policysummary p, pasadm.QuoteVersion q, pasadm.BillablePolicyTerm bp, pasadm.balanceInfo bi, pasadm.balanceamount ba  WHERE p.policyNumber = q.policyNumber  AND p.id = q.policyId AND p.txType = 'renewal'  AND q.txType = 'renewal'  AND p.policyNumber = bp.policyNumber  and bp.balanceinfo_id = bi.id and bi.balancedue_id = ba.id AND case when p.productcd = 'AAA_HO_SS' then trunc(p.effective + 10) when p.productcd = 'AAA_HO_CA' then trunc(p.Effective - 5) end = '/EXECDATE/' AND ba.amount > 0  AND bp.paymentPlan like '%mortgagee%' AND p.policyStatusCd = 'proposed' and p.timedpolicystatuscd = 'proposed'   and  trunc(p.effective) = trunc(bp.termeffectivedate) AND  p.typeOfPolicyCd IN ('HO3', 'HO6', 'DP3') AND NOT EXISTS ( SELECT * FROM pasadm.AAADOCGENFORMEVENTHISTORY dg  WHERE dg.eventName ='BILL_FIRST_RENEW_REMINDER_NOTICE'  AND dg.entityId =p.ID)",
  PostValidation: "select policynumber from pasadm.policysummary A, pasadm.aaadocgenentity B where A.id = B.entityid and trunc(B.creationdate) >= '/EXECDATE/' and B.eventname = 'BILL_FIRST_RENEW_REMINDER_NOTICE'",
}

BCT_BTCH_Automated_Renewal_Mortgagee_Bill_Expiration_Notice_019: {
  PreValidation: "select p.policynumber, p.riskstatecd from  pasadm.policysummary p, pasadm.QuoteVersion q, pasadm.BillablePolicyTerm bp, pasadm.balanceInfo bi, pasadm.balanceamount ba  WHERE p.policyNumber = q.policyNumber AND p.id = q.policyId AND p.txType = 'renewal' AND q.txType = 'renewal' AND p.policyNumber = bp.policyNumber and bp.balanceinfo_id = bi.id and bi.balancedue_id = ba.id AND trunc(p.effective + 40) = '/EXECDATE/' AND ba.amount > 0 AND bp.paymentPlan like '%mortgagee%' AND p.policyStatusCd in ( 'proposed', 'customerDeclined')  and  trunc(p.effective) = trunc(bp.termeffectivedate) and p.timedpolicystatuscd in ( 'proposed', 'customerDeclined') AND p.typeOfPolicyCd IN ('HO3', 'HO6', 'DP3') AND NOT EXISTS ( SELECT * FROM pasadm.AAADOCGENFORMEVENTHISTORY dg WHERE dg.eventName ='MORTGAGEE_BILL_FINAL_EXP_NOTICE' AND dg.entityId =p.ID)",
  PostValidation: "select policynumber  from pasadm.policysummary A, pasadm.aaadocgenentity B where A.id = B.entityid and trunc(B.creationdate)>= '/EXECDATE/' and B.eventname = 'MORTGAGEE_BILL_FINAL_EXP_NOTICE'",
}

BCT_BTCH_Bind_Issue_Renewal_Lapsed_Issued_014: {
  PreValidation: "select policynumber,riskstatecd FROM (select p.policynumber, p.riskstatecd ,row_number() over(partition by riskstatecd order by p.policynumber desc ) as rn from pasadm.policysummary p, pasadm.billablepolicyterm b where p.policynumber = B.policynumber and B.status = 'active' and p.txtype = 'renewal'  and p.timedpolicystatuscd = 'proposed' and trunc(p.effective + 10) = '/EXECDATE/' and exists(select policyid from pasadm.quoteversion q where p.id = q.policyid))  Temp where temp.rn = 1",
  PostValidation: "select policynumber from pasadm.policysummary where txtype = 'renewal' and policystatuscd = 'issued' and timedpolicystatuscd = 'inForce' and trunc(effective + 10) = '/EXECDATE/' and (trunc(transactiondate+10)>= '/EXECDATE/' or trunc(updatedon+10)> = '/EXECDATE/')",
}

BCT_BTCH_Manual_Renewal_Customer_Declined_Manual_016: {
  PreValidation: "select policynumber,riskstatecd FROM (select p.policynumber, p.riskstatecd ,row_number() over(partition by riskstatecd order by p.policynumber desc ) as rn from pasadm.policysummary p, pasadm.billablepolicyterm b where p.policynumber = B.policynumber and B.status = 'active' and p.txtype = 'renewal' and p.policystatuscd= 'customerDeclined' and B.productcd = 'AAA_SS' and p.timedpolicystatuscd = 'customerDeclined' and trunc(p.effective + 16) = '/EXECDATE/' and exists(select policyid from pasadm.quoteversion q where p.id = q.policyid))  Temp where temp.rn = 1",
  PostValidation: "select policynumber from pasadm.policysummary where txtype = 'renewal'  and policystatuscd = 'customerDeclined'   and trunc(effective + 16) = '/EXECDATE/'",
}

BCT_BTCH_Cancellation_Future_Effective_Cancellation_024: {
  PreValidation: "select policynumber,riskstatecd from pasadm.policysummary where txtype = 'cancellation' and policystatuscd = 'cancelled' and timedpolicystatuscd in ('inForcePending') and currentrevisionind = 1 and trunc(transactioneffectivedate) = '/EXECDATE/' and EXPIRATION > '/EXECDATE/' group by policynumber,riskstatecd",
  PostValidation: "select policynumber from pasadm.policysummary where txtype = 'cancellation' and policystatuscd = 'cancelled' and timedpolicystatuscd in ('inForce') and trunc(transactioneffectivedate) - trunc(transactiondate) > 1 and currentrevisionind = 1 and trunc(transactioneffectivedate) = '/EXECDATE/' and EXPIRATION > '/EXECDATE/' group by policynumber",
}

BCT_BTCH_Cancellation_Earned_Premium_025: {
  PreValidation: "select p.policynumber, p.riskstatecd from pasadm.policysummary p, pasadm.billablepolicyterm bp, pasadm.balanceinfo b, pasadm.balanceamount ba where p.policynumber= bp.policynumber and p.effective = bp.termeffectivedate and bp.balanceinfo_id = b.id and b.minimumdue_id = ba.id and  p.updatedby = 'ipbsys' and trunc(p.CREATEDON +15) = '/EXECDATE/' and trunc(p.LASTCANCELLATIONDATE +15) = '/EXECDATE/' and p.txtype = 'cancellation' and p.policystatuscd = 'cancelled' and p.timedpolicystatuscd in ('inForce') and p.currentrevisionind = 1 and p.EXPIRATION > '/EXECDATE/' and ba.amount > case when p.productcd = 'AAA_SS' then 0 when p.productcd = 'AAA_CSA' then 12 when p.productcd IN ('AAA_HO_SS', 'AAA_PUP_SS') and riskstatecd <> 'CA' then 5 when p.productcd IN ('AAA_PUP_SS', 'AAA_HO_CA') and riskstatecd = 'CA'  then 7 end group by p.policynumber,p.riskstatecd",
  PostValidation: "select policynumber from pasadm.policysummary A, pasadm.aaadocgenentity B where A.id = B.entityid and trunc(B.creationdate) >= '/EXECDATE/' and eventname = 'CANCELLDEBETNOTICE_15'",
}

BCT_BTCH_Cancellation_Earned_Premium_026: {
  PreValidation: "select p.policynumber, p.riskstatecd from pasadm.policysummary p, pasadm.billablepolicyterm bp, pasadm.balanceinfo b, pasadm.balanceamount ba ,pasadm.aaadocgenentity de where p.policynumber= bp.policynumber and p.effective = bp.termeffectivedate and p.id=de.entityid and bp.balanceinfo_id = b.id and b.minimumdue_id = ba.id and trunc(transactiondate +30)  = to_date('/EXECDATE/', 'DD-MON-YY') and p.txtype = 'cancellation' and p.policystatuscd = 'cancelled' and p.timedpolicystatuscd in ('inForce') and p.currentrevisionind = 1 and de.eventname = 'CANCELLDEBETNOTICE_15' and p.EXPIRATION > '/EXECDATE/' and ba.amount > case when p.productcd = 'AAA_SS' then 0 when p.productcd = 'AAA_CSA' then 12 when p.productcd IN ('AAA_HO_SS', 'AAA_PUP_SS') and riskstatecd <> 'CA' then 5 when p.productcd IN ('AAA_PUP_SS', 'AAA_HO_CA') and riskstatecd = 'CA'  then 7 end group by p.policynumber,p.riskstatecd",
  PostValidation: "select policynumber from pasadm.policysummary A, pasadm.aaadocgenentity B where A.id = B.entityid and trunc(B.creationdate) >= '/EXECDATE/' and eventname = 'CANCELLDEBETNOTICE_30'",
}

BCT_BTCH_Cancellation_Earned_Premium_027: {
  PreValidation: "select p.policynumber, p.riskstatecd from pasadm.policysummary p, pasadm.billablepolicyterm bp, pasadm.balanceinfo b, pasadm.balanceamount ba ,pasadm.aaadocgenentity de where p.policynumber= bp.policynumber and p.effective = bp.termeffectivedate and p.id=de.entityid and bp.balanceinfo_id = b.id and b.minimumdue_id = ba.id and trunc(transactiondate +45)  = to_date('/EXECDATE/', 'DD-MON-YY') and p.txtype = 'cancellation' and p.policystatuscd = 'cancelled' and p.timedpolicystatuscd in ('inForce') and p.currentrevisionind = 1 and de.eventname = 'CANCELLDEBETNOTICE_30'and p.EXPIRATION > '/EXECDATE/' and ba.amount > case when p.productcd = 'AAA_SS' then 0 when p.productcd = 'AAA_CSA' then 12 when p.productcd IN ('AAA_HO_SS', 'AAA_PUP_SS') and riskstatecd <> 'CA' then 5 when p.productcd IN ('AAA_PUP_SS', 'AAA_HO_CA') and riskstatecd = 'CA'  then 7 end group by p.policynumber,p.riskstatecd",
  PostValidation: "select policynumber from pasadm.policysummary A, pasadm.aaadocgenentity B where A.id = B.entityid and trunc(B.creationdate) >= '/EXECDATE/' and eventname = 'CANCELLDEBETNOTICE_45'",
}

BCT_BTCH_Generate_Bill_Generate_Installment_Bill_029: {
  PreValidation: "SELECT p.policynumber,p.RISKSTATE FROM BILLINGACCOUNT a JOIN BILLABLEPOLICYTERM p ON a.ID = p.ACCOUNT_ID JOIN BALANCEINFO b ON p.BALANCEINFO_ID = b.ID LEFT OUTER JOIN BALANCEAMOUNT md ON md.ID = b.MINIMUMDUE_ID LEFT OUTER JOIN BALANCEAMOUNT bd ON bd.ID = b.BALANCEDUE_ID  JOIN BILLINGINFO info ON info.ID = a.BILLINGINFO_ID WHERE (p.STATUS = 'active' OR EXISTS(SELECT bh.ID FROM BILLINGHOLD bh JOIN BILLINGHOLD_BILLABLEPOLICYTERM bb ON bb.BILLINGHOLD_ID = bh.ID JOIN BILLABLEPOLICYTERM bp ON bp.ID = bb.BILLABLEPOLICYTERM_ID WHERE bp.ID = p.ID AND bh.EFFECTIVEDATE IS NOT NULL AND TRUNC(bh.EFFECTIVEDATE) >'/EXECDATE/')) AND (info.BILLTYPE NOT IN ('agency') OR info.BILLTYPE IS NULL) AND p.PRODUCTCD = 'AAA_SS' AND p.BILLINGCYCLE IN ('billing') AND ((md.AMOUNT IS NULL AND bd.AMOUNT > 0) OR (md.AMOUNT IS NOT NULL AND md.AMOUNT < bd.AMOUNT)) AND EXISTS(SELECT p1.ID FROM BILLABLEPOLICYTERM p1 JOIN BALANCEINFO b1 ON p1.BALANCEINFO_ID = b1.ID LEFT OUTER JOIN BALANCEAMOUNT md ON md.ID = b1.MINIMUMDUE_ID JOIN INSTALLMENT i ON i.POLICYTERM_ID = p1.ID LEFT OUTER JOIN BALANCEAMOUNT ia ON ia.ID = i.AMOUNT_ID WHERE p1.ID = p.ID AND i.STATUS = 'pending' AND TRUNC(i.DUEDATE)-20 <= '/EXECDATE/' AND TRUNC(i.DUEDATE)-13>= '/EXECDATE/' AND ((coalesce(md.AMOUNT, 0) + coalesce((SELECT sum(ia2.AMOUNT) FROM BILLABLEPOLICYTERM p2 JOIN INSTALLMENT i2 ON p2.ID = i2.POLICYTERM_ID LEFT OUTER JOIN BALANCEAMOUNT ia2 ON ia2.ID = i2.AMOUNT_ID WHERE p2.ID = p.ID AND i2.STATUS = 'pending' AND TRUNC(i2.DUEDATE)-20 <= '/EXECDATE/'), 0)) > 5)) UNION SELECT  p.policynumber,p.RISKSTATE FROM BILLINGACCOUNT a JOIN BILLABLEPOLICYTERM p ON a.ID = p.ACCOUNT_ID JOIN BILLINGINFO info ON info.ID = a.BILLINGINFO_ID WHERE(p.STATUS IN ('active') OR EXISTS(SELECT bh.ID FROM BILLINGHOLD bh JOIN BILLINGHOLD_BILLABLEPOLICYTERM bb ON bb.BILLINGHOLD_ID = bh.ID JOIN BILLABLEPOLICYTERM bp ON bp.ID = bb.BILLABLEPOLICYTERM_ID WHERE bp.ID = p.ID AND bh.EFFECTIVEDATE IS NOT NULL AND TRUNC(bh.EFFECTIVEDATE) > '/EXECDATE/'))AND (info.BILLTYPE NOT IN ('agency') OR info.BILLTYPE IS NULL) AND p.PRODUCTCD ! ='AAA_SS' AND p.BILLINGCYCLE IN ('billing') AND EXISTS(SELECT p1.ID FROM BILLABLEPOLICYTERM p1 JOIN BALANCEINFO b1 ON p1.BALANCEINFO_ID = b1.ID LEFT OUTER JOIN BALANCEAMOUNT md ON md.ID = b1.MINIMUMDUE_ID JOIN INSTALLMENT i ON i.POLICYTERM_ID = p1.ID LEFT OUTER JOIN BALANCEAMOUNT ia ON ia.ID = i.AMOUNT_ID WHERE p1.ID = p.ID AND i.STATUS = 'pending' AND TRUNC(i.DUEDATE)-20 <= '/EXECDATE/' AND TRUNC(i.DUEDATE)-13>= '/EXECDATE/' AND ((coalesce(md.AMOUNT, 0) + coalesce((SELECT sum(ia2.AMOUNT) FROM BILLABLEPOLICYTERM p2 JOIN INSTALLMENT i2 ON p2.ID = i2.POLICYTERM_ID LEFT OUTER JOIN BALANCEAMOUNT ia2 ON ia2.ID = i2.AMOUNT_ID WHERE p2.ID = p.ID AND i2.STATUS = 'pending' AND TRUNC(i2.DUEDATE)-20 = '/EXECDATE/'), 0)) > 20))",
  PostValidation: "select B.policynumber from pasadm.invoice A, pasadm.billablepolicyterm B where A.account_id = B.account_id and trunc(A.createdate) >= '/EXECDATE/' and A.status = 'issued' and A.type = 'bill' and B.billingcycle = 'billing' and B.termexpirationdate >= '/EXECDATE/' AND B.termeffectivedate <= '/EXECDATE/'",
}

BCT_BTCH_Process_Refunds_Process_Refunds_032: {
  PreValidation: "SELECT term.policynumber,term.RISKSTATE FROM pasadm.BillingTransaction t JOIN pasadm.BILLINGACCOUNT a ON (a.ID = t.ACCOUNT_ID) JOIN pasadm.BILLINGINFO i ON (i.ID=a.BILLINGINFO_ID) JOIN pasadm.TRANSACTIONALLOCATION ta ON (t.id=ta.tx_ID) JOIN pasadm.BILLABLEPOLICYTERM term ON (term.ID = ta.POLICY_ID) JOIN pasadm.BALANCEINFO bi ON (bi.ID = term.BALANCEINFO_ID) JOIN pasadm.BALANCEAMOUNT bd ON (bd.ID = bi.BALANCEDUE_ID) JOIN pasadm.BALANCEAMOUNT bp ON (bp.ID = bi.PAID_ID) where (bd.AMOUNT < 0 and bp.AMOUNT > 0) and a.STATUS != 'held' AND t.'SUBTYPE <> 'Escheatment' and case when bd.amount < 0 and term.productcd IN ('AAA_SS') and term.riskstate = 'CA' then trunc(t.creationdate + 3) when bd.amount < -5 and term.productcd IN ('AAA_HO_CA') and term.riskstate = 'CA' then trunc(t.creationdate + 3) when bd.amount < 0 and term.productcd IN ('AAA_PUP_SS', 'AAA_HO_SS') and term.riskstate = 'VA' then trunc(t.creationdate + 10) when bd.amount < -5 and term.productcd IN ('AAA_HO_SS', 'AAA_PUP_SS') and term.riskstate = 'PA' then trunc(t.creationdate + 7) when bd.amount < -5 and term.productcd IN ('AAA_HO_SS') then trunc(t.creationdate + 10) else trunc(t.creationdate + 10) end = to_date('/EXECDATE/', 'DD-MON-YY')  group by term.policynumber,term.RISKSTATE",
  PostValidation: "select p.policynumber from pasadm.billablepolicyterm p, pasadm.billingtransaction bt where p.account_id = bt.account_id and bt.subtype = 'AutomatedRefund' and bt.type = 'payment' and bt.status = 'applied'  and trunc(bt.creationdate) >= '/EXECDATE/'",
}

BCT_BTCH_Process_AcceptPayments_RecurringPayments_034: {
  PreValidation: "select p.POLICYNUMBER,p.RISKSTATE from pasadm.INVOICE I, pasadm.billablepolicyterm p, pasadm.balanceinfo bi, pasadm.balanceamount ba, pasadm.paymentdetails pd, pasadm.billingaccount bact where I.account_id = p.account_id and I.balance_info_id = bi.id and bi.balancedue_id = ba.id and p.account_id = pd.account_id and p.account_id = bact.id and bact.ENABLERECURRINGPAYMENTS = 1 and pd.DTYPE IN ('AAAPaymentDetailsPCICreditCard', 'AAAPaymentDetailsEFT') and ba.amount > 0 and p.termeffectivedate < to_date('/EXECDATE/', 'DD-MON-YY') and p.termexpirationdate >= to_date('/EXECDATE/', 'DD-MON-YY') and p.invoicedate = I.duedate and trunc(I.duedate) = to_date('/EXECDATE/', 'DD-MON-YY')and I.type IN ('bill', 'offer')and I.status = 'issued' group by p.policynumber,p.RISKSTATE",
  PostValidation: "select p.policynumber  from pasadm.billingtransaction bt, pasadm.billablepolicyterm p where p.account_id = bt.account_id and p.termeffectivedate <= '/EXECDATE/' and p.termexpirationdate >= '/EXECDATE/' and trunc(bt.creationdate) >= '/EXECDATE/' and paymentnumber is not null and bt.type = 'payment' and bt.subtype = 'RecurringPayment' and p.billingcycle IN ('billing','offer') group by p.policynumber",
}

BCT_BTCH_Manage_OffcycleBill_031: {
  PreValidation: "select p.policynumber , p.riskstate from  pasadm.billablepolicyterm p, pasadm.balanceinfo bi, pasadm.balanceamount amt where p.balanceinfo_id = bi.id and bi.balancedue_Id = amt.id and amt.amount = 0 and (p.paymentplan like '%qua%' OR p.paymentplan like '%semi%' OR p.paymentplan like '%annual%') and p.status <> 'held' and  p.billingcycle = 'billing'and  p.termeffectivedate < '/EXECDATE/' and p.termexpirationdate > '/EXECDATE/'  and (add_months(trunc(p.termeffectivedate) , 1) - 20 = '/EXECDATE/' OR add_months(trunc(p.termeffectivedate) , 2) - 20 = '/EXECDATE/'   OR add_months(trunc(p.termeffectivedate) , 3) - 20 = '/EXECDATE/'  OR add_months(trunc(p.termeffectivedate) , 4) - 20 = '/EXECDATE/' OR add_months(trunc(p.termeffectivedate) , 5) - 20 = '/EXECDATE/' OR add_months(trunc(p.termeffectivedate) , 6) - 20 = '/EXECDATE/'   OR add_months(trunc(p.termeffectivedate) , 7) - 20 = '/EXECDATE/'   OR add_months(trunc(p.termeffectivedate) , 8) - 20 = '/EXECDATE/'  OR add_months(trunc(p.termeffectivedate) , 9) - 20 = '/EXECDATE/'  OR add_months(trunc(p.termeffectivedate) , 10) - 20 = '/EXECDATE/') and  p.riskstate=/STATE/ and rownum=1_STATE",
  PostValidation: "select policynumber from pasadm.aaadocgenentity A, pasadm.policysummary B where A.entityid = B.id and eventname like '%OFFCYCLE%' and trunc(creationdate ) >= '/EXECDATE/'",
}

BCT_BTCH_Manage_Payment_Exceptions_Payment_033: {
  PreValidation: "select p.policynumber, p.riskstate from pasadm.billablepolicyterm p, pasadm.billingtransaction b, pasadm.payment pt where p.account_id = b.account_id and b.paymentnumber = pt.paymentnumber and pt.status = 'pending'  and b.type = 'payment' and b.status = 'pending' and p.termeffectivedate < '/EXECDATE/' and p.termexpirationdate > '/EXECDATE/'",
  PostValidation: "select p.policynumber from pasadm.billablepolicyterm p, pasadm.billingtransaction b, pasadm.payment pt where p.account_id = b.account_id and b.paymentnumber = pt.paymentnumber and pt.status IN   ('cleared','issued') and b.status = 'applied' and trunc(b.creationdate) >= '/EXECDATE/' and b.type = 'payment' and p.termeffectivedate < '/EXECDATE/' and p.termexpirationdate > '/EXECDATE/'",
}

BCT_BTCH_Automated_Renewal_PreRenewal_Reminder_011: {
  PreValidation: "select p.policynumber, p.riskstatecd FROM pasadm.BILLINGACCOUNT BA INNER JOIN pasadm.BILLABLEPOLICYTERM BP ON BA.ID=BP.ACCOUNT_ID INNER JOIN pasadm.BALANCEINFO BI1 ON BP.BALANCEINFO_ID=BI1.ID LEFT OUTER JOIN pasadm.BALANCEINFO BI2 ON BP.BALANCEINFO_ID=BI2.ID LEFT OUTER JOIN pasadm.BALANCEAMOUNT MD ON BI2.MINIMUMDUE_ID=MD.ID LEFT OUTER JOIN pasadm.BALANCEAMOUNT BD ON BI2.BALANCEDUE_ID=BD.ID INNER JOIN pasadm.BILLINGINFO BI ON BA.BILLINGINFO_ID=BI.ID,pasadm.POLICYSUMMARY P,pasadm.QUOTEVERSION QV WHERE P.POLICYNUMBER=BP.POLICYNUMBER AND TRUNC(BP.TERMEFFECTIVEDATE) =TRUNC(P.EFFECTIVE)AND (P.POLICYSTATUSCD IN ('initiated' , 'dataGather' , 'pended' , 'rated' , 'proposed')) AND (P.TIMEDPOLICYSTATUSCD     IN ('initiated' , 'dataGather' , 'pended' , 'rated' , 'proposed')) AND P.CURRENTREVISIONIND  =0 AND P.TXTYPE ='renewal' AND QV.POLICYNUMBER =P.POLICYNUMBER AND QV.POLICYID =P.ID AND QV.TXTYPE  ='renewal' AND (BA.ENABLERECURRINGPAYMENTS<>1 OR BI.DEFAULTPAYMENTMETHOD_ID  IS NULL) AND MD.AMOUNT >0 AND NOT (EXISTS(SELECT DOCGEN.ID FROM pasadm.AAADOCGENENTITY DOCGEN WHERE DOCGEN.EVENTNAME='PRE_RENEWAL_REMINDER_NOTICE' AND DOCGEN.ENTITYID   =P.ID))AND TRUNC(P.EFFECTIVE)+ 30>= '/EXECDATE/' AND ((P.PRODUCTCD IN ('AAA_SS' , 'AAA_HO_SS' , 'AAA_PUP_SS'))AND P.RISKSTATECD     <>'CA' AND TRUNC(P.EFFECTIVE) BETWEEN TO_DATE('/EXECDATE/','DD-MON-YY') and TO_DATE('/EXECDATE/','DD-MON-YY') + 10 OR P.PRODUCTCD ='AAA_CSA' AND TRUNC(P.EFFECTIVE) BETWEEN TO_DATE('/EXECDATE/','DD-MON-YY') and TO_DATE('/EXECDATE/','DD-MON-YY') + 10 AND (P.IMPORTEDFROM   IS NULL OR P.IMPORTEDFROM NOT IN ('ADES' , 'HUON')OR P.RENEWALCYCLE      >1) OR P.IMPORTEDFROM      ='HDES' OR P.IMPORTEDFROM      ='SIS' AND P.RISKSTATECD      ='CA' AND (P.PRODUCTCD      IN ('AAA_HO_CA')) AND P.RENEWALCYCLE     =1 AND TRUNC(P.EFFECTIVE) -10 <='/EXECDATE/' OR (P.PRODUCTCD       IN ('AAA_HO_CA' , 'AAA_PUP_SS')) AND P.RISKSTATECD      ='CA' AND TRUNC(P.EFFECTIVE) BETWEEN TO_DATE('/EXECDATE/','DD-MON-YY') and TO_DATE('/EXECDATE/','DD-MON-YY') + 20 AND (P.IMPORTEDFROM   IS NULL OR P.IMPORTEDFROM NOT IN ('ADES' , 'HUON')OR P.RENEWALCYCLE      >1) OR P.IMPORTEDFROM      ='ADES' AND P.RENEWALCYCLE     =1 AND TRUNC(P.EFFECTIVE)+ 10<='/EXECDATE/')",
  PostValidation: "SELECT P.POLICYNUMBER FROM pasadm.AAADOCGENENTITY DOCGEN, pasadm.POLICYSUMMARY P WHERE DOCGEN.EVENTNAME='PRE_RENEWAL_REMINDER_NOTICE' AND DOCGEN.ENTITYID   =P.ID AND TRUNC(DOCGEN.CREATIONDATE) >= '/EXECDATE/'",
}

BCT_BTCH_Bind_Issue_Renewal_Proposed_Lapsed_013: {
  PreValidation: "select p.policynumber, p.riskstatecd from pasadm.policysummary P, pasadm.quoteversion q where p.id = q.policyid and p.txtype = 'renewal' and p.policystatuscd = 'proposed' and p.timedpolicystatuscd = 'proposed' and p.currentrevisionind = 0 and (p.manualrenewind is null or p.manualrenewind = 0) and (p.donotrenewind is null or p.donotrenewind = 0) and trunc(p.effective) = '/EXECDATE/'",
  PostValidation: "select policynumber from pasadm.policysummary where txtype = 'renewal' and policystatuscd = 'proposed' and timedpolicystatuscd = 'proposed' and (manualrenewind is null or manualrenewind = 0) and (donotrenewind is null or donotrenewind = 0) and trunc(effective) >= '/EXECDATE/'",
}

BCT_BTCH_Cancellation_Cancellation_Notice_Bill_023: {
  PreValidation: "select p.policynumber, p.riskstate from pasadm.BILLINGACCOUNT A INNER JOIN pasadm.BILLABLEPOLICYTERM P ON P.ACCOUNT_ID = A.ID INNER JOIN pasadm.BALANCEINFO B ON P.BALANCEINFO_ID = B.ID INNER JOIN pasadm.BALANCEAMOUNT MD ON MD.ID = B.MINIMUMDUE_ID LEFT OUTER JOIN pasadm.BALANCEAMOUNT PD ON PD.ID= B.PASTDUE_ID WHERE CASE WHEN P.PRODUCTCD IN ('AAA_CSA', 'AAA_HO_CA', 'AAA_PUP_SS') AND P.RISKSTATE = 'CA' THEN trunc(P.INVOICEDATE + 30) WHEN P.PRODUCTCD IN ('AAA_SS', 'AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATE = 'AZ' THEN trunc(P.INVOICEDATE + 8) ELSE trunc(P.INVOICEDATE + 5) END = TO_DATE('/EXECDATE/','DD-MON-YY') AND CASE WHEN P.PRODUCTCD IN ('AAA_CSA', 'AAA_HO_CA', 'AAA_PUP_SS') AND P.RISKSTATE = 'CA' THEN trunc(P.TERMEFFECTIVEDATE + 30) WHEN P.PRODUCTCD IN ('AAA_SS', 'AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATE = 'AZ' THEN TRUNC(P.TERMEFFECTIVEDATE + 8) ELSE TRUNC(P.TERMEFFECTIVEDATE + 5) END <= TO_DATE('/EXECDATE/','DD-MON-YY') AND CASE WHEN P.PRODUCTCD IN ('AAA_CSA', 'AAA_HO_CA', 'AAA_PUP_SS') AND P.RISKSTATE = 'CA' THEN TRUNC(P.TERMEXPIRATIONDATE + 30) WHEN P.PRODUCTCD IN ('AAA_SS', 'AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATE = 'AZ' THEN TRUNC(P.TERMEXPIRATIONDATE + 8) ELSE TRUNC(P.TERMEXPIRATIONDATE + 5) END > TO_DATE('/EXECDATE/','DD-MON-YY') AND P.INVOICEDATE IS NOT NULL AND (NVL(MD.AMOUNT, 0) +(SELECT NVL((SELECT MD2.AMOUNT FROM pasadm.BILLABLEPOLICYTERM P2 INNER JOIN pasadm.BALANCEINFO B2 ON P2.BALANCEINFO_ID = B2.ID INNER JOIN pasadm.BALANCEAMOUNT MD2 ON MD2.ID = B2.MINIMUMDUE_ID WHERE P2.POLICYNUMBER            = P.POLICYNUMBER AND (P2.RISKSTATE               IS NOT NULL AND P2.RISKSTATE                != 'NJ') AND TRUNC(P2.TERMEXPIRATIONDATE) = TRUNC(P.TERMEFFECTIVEDATE)), 0) FROM DUAL)) > CASE WHEN P.PRODUCTCD IN ('AAA_CSA', 'AAA_HO_CA', 'AAAA_PUP_SS') AND P.RISKSTATE = 'CA'  THEN 10 ELSE 12 END AND P.BILLINGCYCLE = 'billing' AND A.STATUS      <> 'held' AND NOT EXISTS(SELECT 1 FROM pasadm.BILLINGHOLD H INNER JOIN pasadm.BILLINGHOLD_BILLABLEPOLICYTERM BB ON H.ID= BB.BILLINGHOLD_ID WHERE BB.BILLABLEPOLICYTERM_ID = P.ID AND H.EFFECTIVEDATE           <= TO_DATE('/EXECDATE/','DD-MON-YY') AND (H.EXPIRATIONDATE         IS NULL OR TO_DATE('/EXECDATE/','DD-MON-YY') < H.EXPIRATIONDATE) )AND CASE WHEN P.PRODUCTCD IN ('AAA_CSA', 'AAA_HO_CA', 'AAA_PUP_SS') AND P.RISKSTATE = 'CA' THEN trunc(P.FUTURESTATEMENTDATE + 30) WHEN P.PRODUCTCD IN ('AAA_SS', 'AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATE = 'AZ' THEN TRUNC(P.FUTURESTATEMENTDATE + 8) ELSE TRUNC(P.FUTURESTATEMENTDATE + 5)END = TO_DATE('/EXECDATE/','DD-MON-YY') AND NOT EXISTS (SELECT ID FROM pasadm.BILLABLEPOLICYTERM BP WHERE BP.POLICYNUMBER= P.POLICYNUMBER AND TRUNC(BP.TERMEFFECTIVEDATE)  > TRUNC(P.TERMEFFECTIVEDATE) AND TRUNC(BP.TERMEXPIRATIONDATE) > TRUNC(P.TERMEXPIRATIONDATE))",
  PostValidation: "select policynumber from pasadm.policysummary where policystatuscd = 'issued' and timedpolicystatuscd = 'inForce' and currentrevisionind = 1 and cancelnoticeind = 1 and trunc(CANCELNOTICEDATE) >= '/EXECDATE/'",
}

BCT_BTCH_Bind_Issue_Renewal_Proposed_Issued_012: {
  PreValidation: "select policynumber,riskstatecd FROM (select p.policynumber, p.riskstatecd ,row_number() over(partition by riskstatecd order by p.policynumber desc ) as rn from  pasadm.policysummary P, pasadm.billablepolicyterm bp,pasadm.balanceinfo bi, pasadm.balanceamount ba,  pasadm.paymentdetails pt where p.txtype = 'renewal' and p.policynumber = bp.policynumber and p.effective = bp.termeffectivedate and bp.account_id = pt.account_id and bp.balanceinfo_id = bi.id and bi.minimumdue_id = ba.id and pt.signatureonfile is null and ba.amount > 0 and p.policystatuscd = 'proposed' and p.timedpolicystatuscd = 'proposed' and p.currentrevisionind = 0 and (p.manualrenewind is null or p.manualrenewind = 0) and (p.donotrenewind is null or p.donotrenewind = 0) and trunc(p.effective) = '/EXECDATE/' ) Temp where temp.rn = 1",
  PostValidation: "select p.policynumber from pasadm.policysummary  p where p.txtype = 'renewal' and p.policystatuscd = 'issued' and p.timedpolicystatuscd = 'inForce' and (p.manualrenewind is null or p.manualrenewind = 0) and (p.donotrenewind is null or p.donotrenewind = 0) and trunc(p.effective) = '/EXECDATE/'",
}

BCT_BTCH_Bind_Issue_Renewal_Proposed_Lapsed_013: {
  PreValidation: "select p.policynumber, p.riskstatecd from pasadm.policysummary P, pasadm.billablepolicyterm bp,pasadm.balanceinfo bi, pasadm.balanceamount ba,  pasadm.paymentdetails pt , pasadm.billingaccount bact where p.txtype = 'renewal' and p.policynumber = bp.policynumber and p.effective = bp.termeffectivedate and bp.account_id = pt.account_id and bp.balanceinfo_id = bi.id and   bp.account_id = bact.id and bi.minimumdue_id = ba.id and pt.signatureonfile is null and ba.amount > 0 and p.policystatuscd = 'proposed' and p.timedpolicystatuscd = 'proposed' and bact.ENABLERECURRINGPAYMENTS = 0 and p.currentrevisionind = 0 and (p.manualrenewind is null or p.manualrenewind = 0) and (p.donotrenewind is null or p.donotrenewind = 0)  and  trunc(p.effective) = '/EXECDATE/'  group by p.policynumber, p.riskstatecd",
  PostValidation: "select p.policynumber from pasadm.policysummary  p where p.txtype = 'renewal' and p.policystatuscd = 'proposed' and p.timedpolicystatuscd = 'proposed' and (p.manualrenewind is null or p.manualrenewind = 0) and (p.donotrenewind is null or p.donotrenewind = 0) and trunc(p.effective) = '/EXECDATE/'",
}

BCT_BTCH_Automated_Renewal_Generate_Renewal_Bill_010: {
  PreValidation: "select b.policynumber, b.riskstate from pasadm.billablepolicyterm b,  pasadm.policysummary p, pasadm.quoteversion  q where b.status = 'active' and p.id = q.policyid and b.policynumber = p.policynumber and b.termeffectivedate = p.effective and p.txtype = 'renewal' and p.txsubtype = 'ANN' and p.policystatuscd = 'proposed' and p.timedpolicystatuscd = 'proposed' and trunc(p.effective - 20) = '/EXECDATE/' and b.invoicedate is  null",
  PostValidation: "select B.policynumber from pasadm.AAADOCGENENTITY A, pasadm.policysummary B where A.entityid = B.id and A.eventname = 'RENEWAL_BILL' and trunc(A.creationdate) >= '/EXECDATE/'",
}

BCT_BTCH_Automated_Renewal_General_Renewal_Expiration_Notices_021: {
  PreValidation: "SELECT r.policyNumber, r.riskstatecd FROM pasadm.POLICYSUMMARY r  INNER JOIN pasadm.QUOTEVERSION qv ON r.id=qv.policyId INNER JOIN pasadm.BILLABLEPOLICYTERM bpt ON (bpt.policyNumber = r.policyNumber AND bpt.termEffectiveDate = r.effective) INNER JOIN pasadm.BALANCEINFO bi ON bpt.balanceInfo_id = bi.id left outer join pasadm.BALANCEAMOUNT md on md.id = bi.minimumdue_id WHERE r.txType = 'renewal' and qv.txType = 'renewal' AND (r.policyStatusCd = 'proposed' or r.policyStatusCd = 'issued') AND r.productCd in ('AAA_SS', 'AAA_HO_SS', 'AAA_PUP_SS') AND md.amount > 0 AND case when r.productcd in ('AAA_SS') and r.riskstatecd in ('AR','AL','AK','AZ') then trunc(r.effective + 10) when r.productcd in ('AAA_HO_SS') and r.riskstatecd in ('AZ') then trunc(r.effective + 10) else trunc(r.effective + 5) end = to_date('/EXECDATE/','DD-MON-YY') AND NOT EXISTS (SELECT d.id FROM pasadm.AAADocGenEntity d WHERE d.eventName = 'EXPIRATION_NOTICE'  AND d.entityId = r.id ) AND NOT EXISTS (SELECT r.ID FROM pasadm.PolicySummary ps WHERE ps.policyNumber=r.policyNumber AND r.revisionNo<ps.revisionNo)",
  PostValidation: "select p.policyNumber, d.eventname,d.productcd from pasadm.AAADOCGENENTITY d , pasadm.POLICYSUMMARY p where d.entityid =p.id and d.eventname ='EXPIRATION_NOTICE' and d.productcd in ('AAA_SS','AAA_HO_SS','AAA_PUP_SS') and trunc(d.creationdate) >= '/EXECDATE/'",
}

BCT_BTCH_Automated_NonRenewal_CustomerDeclined_Rewrite_017: {
  PreValidation: "SELECT PS.POLICYNUMBER,PS.RISKSTATECD FROM pasadm.POLICYSUMMARY PS INNER JOIN pasadm.QUOTEVERSION QV ON (PS.ID = QV.POLICYID) WHERE PS.POLICYNUMBER IN (SELECT BPT.POLICYNUMBER from pasadm.PAYMENTDETAILS PD JOIN pasadm.PAYMENT P ON (PD.ID=P.PAYMENTDETAILS_ID) JOIN pasadm.BILLINGTRANSACTION BT ON (P.PAYMENTNUMBER=BT.PAYMENTNUMBER) JOIN pasadm.TRANSACTIONALLOCATION TA ON (BT.ID =TA.TX_ID) JOIN pasadm.BILLABLEPOLICYTERM BPT ON (TA.POLICY_ID = BPT.ID)WHERE BPT.POLICYNUMBER = PS.POLICYNUMBER AND P.CREATIONDATE NOT BETWEEN PS.EFFECTIVE AND PS.EFFECTIVE + 31 ) AND PS.TXTYPE = 'renewal' AND PS.POLICYSTATUSCD = 'customerDeclined' AND PS.TRANSACTIONDATE <= PS.EFFECTIVE + 31 AND TRUNC(PS.EFFECTIVE) = '/EXECDATE/'",
  PostValidation: "SELECT PS.POLICYNUMBER FROM pasadm.POLICYSUMMARY PS WHERE PS.POLICYNUMBER IN (SELECT BPT.POLICYNUMBER from pasadm.PAYMENTDETAILS PD JOIN pasadm.PAYMENT P ON (PD.ID=P.PAYMENTDETAILS_ID) JOIN pasadm.BILLINGTRANSACTION BT ON (P.PAYMENTNUMBER=BT.PAYMENTNUMBER) JOIN pasadm.TRANSACTIONALLOCATION TA ON (BT.ID =TA.TX_ID) JOIN pasadm.BILLABLEPOLICYTERM BPT ON (TA.POLICY_ID = BPT.ID)WHERE BPT.POLICYNUMBER = PS.POLICYNUMBER )AND PS.TXTYPE = 'renewal' AND PS.POLICYSTATUSCD = 'customerDeclined'   AND TRUNC(PS.EFFECTIVE) = '/EXECDATE/'",
}

BCT_BTCH_Automated_Renewal_Image_Data_Gather_001: {
  PreValidation: "SELECT P.POLICYNUMBER, p.riskstatecd FROM pasadm.PolicySummary P WHERE P.currentRevisionInd  = 1 AND (P.POLICYSTATUSCD  IN ('issued')) AND (P.TIMEDPOLICYSTATUSCD IN ('inForce', 'expired')) AND (P.TXTYPE  IN ('policy', 'reinstatement', 'renewal', 'endorsement', 'changeBroker', 'retro')) AND CASE WHEN P.PRODUCTCD IN ('AAA_CSA') AND P.RISKSTATECD = 'CA' THEN TRUNC(P.EXPIRATION - 81) WHEN P.PRODUCTCD IN ('AAA_PUP_SS', 'AAA_HO_CA') AND P.RISKSTATECD = 'CA' THEN TRUNC(P.EXPIRATION - 83) WHEN P.PRODUCTCD IN ('AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATECD = 'MD' THEN TRUNC(P.EXPIRATION - 88) WHEN P.PRODUCTCD IN ('AAA_HO_SS', 'AAA_PUP_SS') AND P.RISKSTATECD <> 'MD' THEN TRUNC(P.EXPIRATION - 73) WHEN P.PRODUCTCD IN ('AAA_SS') AND P.RISKSTATECD IN ('ID','DE','KS','KY','CT','CO','MD','CA','AZ','NY','MO','NV','MT','WY','WV','VA','UT','NJ','SD','PA','OR','OK','OH','DC','IN') THEN TRUNC(P.EXPIRATION - 96) ELSE TRUNC(P.EXPIRATION - 64) END = TO_DATE('/EXECDATE/', 'DD-MON-YY') AND (P.DONOTRENEWIND = 0 OR P.DONOTRENEWIND IS NULL) AND (P.MANUALRENEWIND =0 OR P.MANUALRENEWIND IS NULL) AND (P.AUTODEBTIND    =0 OR P.AUTODEBTIND IS NULL) AND (P.MANUALDEBTIND  =0 OR P.MANUALDEBTIND IS NULL) AND NOT (EXISTS (SELECT P1.id FROM pasadm.PolicySummary p1 WHERE P1.POLICYNUMBER = P.POLICYNUMBER AND (P1.txType IN ('renewal')) AND P1.POLICYSTATUSCD <> 'initiated' AND NVL(P.RENEWALCYCLE, 0)+1=P1.RENEWALCYCLE)) ORDER BY P.POLICYNUMBER",
  PostValidation: "select p.policynumber from pasadm.policysummary P, pasadm.quoteversion q where p.txtype = 'renewal' and p.id = q.policyid and policystatuscd = 'dataGather' and timedpolicystatuscd = 'dataGather' and trunc(transactiondate) >= '/EXECDATE/'",
}

BCT_BTCH_Automated_Renewal_General_Renewal_Reminder_Notices_020: {
  PreValidation: "select p.policynumber, p.riskstatecd from pasadm.policysummary p Where txtype = 'renewal' and policystatuscd  = 'customerDeclined' and productcd = 'AAA_CSA' and lapsedbatchjobind = 1 and (sentrenewalremindernotice is null or sentrenewalremindernotice = 0) and ( (importedfrom = 'ADES' and renewalcycle = 1 and trunc(effective + 40) = '/EXECDATE/') OR (importedfrom = 'ADES' and renewalcycle > 1 and trunc(effective + 10) = '/EXECDATE/') OR (importedfrom <> 'ADES' and policyformcd = 'CHOICE' and  trunc(effective + 15) = '/EXECDATE/') OR (importedfrom <> 'ADES' and policyformcd <> 'CHOICE' and trunc(effective + 10) = '/EXECDATE/') )",
  PostValidation: "select A.POLICYNUMBER from pasadm.policysummary A, pasadm.aaadocgenentity B where A.id = B.entityid and B.eventname = 'RENEWAL_REMINDER_NOTICE' and A.productcd in ('AAA_CSA') and trunc(b.creationdate) >= '/EXECDATE/'",
}

BCT_BTCH_Cancellation_Legal_Notice_028: {
  PreValidation: "select p.policynumber,p.RISKSTATECD from pasadm.policysummary p, pasadm.billablepolicyterm bp, pasadm.policytransaction pt where p.txtype in ('policy', 'reinstatement', 'endorsement') and p.policystatuscd = 'issued' and p.timedpolicystatuscd = 'inForce' and p.currentrevisionind = 1 and p.cancelnoticeind = 1 and p.policynumber = bp.policynumber and p.effective = bp.termeffectivedate and bp.billingcycle = 'cancellationNotice' and bp.status <> 'held' and p.id = pt.policyid and pt.txreason in  ( '20', '00001') and case when p.productcd = 'AAA_SS' and p.riskstatecd = 'AZ' then trunc(p.cancelnoticedate + 8) when p.productcd in ('AAA_HO_SS', 'AAA_PUP_SS') and p.riskstatecd = 'AZ' then trunc(p.cancelnoticedate + 10) when p.productcd in ('AAA_SS') and p.riskstatecd = 'CT' then trunc(p.cancelnoticedate + 17) when p.productcd in ('AAA_PUP_SS', 'AAA_HO_SS') and p.riskstatecd = 'NJ' then trunc(p.cancelnoticedate + 15) when p.productcd in ('AAA_SS') and p.riskstatecd IN ('PA','NJ','NY') then trunc(p.cancelnoticedate + 15)  when p.productcd in ('AAA_SS', 'AAA_HO_SS', 'AAA_PUP_SS') and p.riskstatecd = 'KY' then trunc(p.cancelnoticedate + 16) when p.productcd in ('AAA_PUP_SS', 'AAA_SS', 'AAA_HO_SS') and p.riskstatecd = 'VA' then trunc(p.cancelnoticedate + 17) when p.productcd in ('AAA_PUP_SS','AAA_HO_SS') and p.riskstatecd = 'CT' then trunc(p.cancelnoticedate + 17)  when p.productcd in ('AAA_PUP_SS','AAA_HO_SS') and p.riskstatecd = 'MT' then trunc(p.cancelnoticedate + 22) when p.productcd in ('AAA_SS') and p.riskstatecd = 'DC' then trunc(p.cancelnoticedate + 17) when p.productcd in ('AAA_HO_CA', 'AAA_PUP_SS') and p.riskstatecd = 'CA' then trunc(p.cancelnoticedate + 20) when p.productcd in ('AAA_HO_SS', 'AAA_PUP_SS') and p.riskstatecd = 'ID' then trunc(p.cancelnoticedate + 17) when p.productcd in ('AAA_SS','AAA_HO_SS') and p.riskstatecd = 'SD' then trunc(p.cancelnoticedate + 22) when p.productcd in ('AAA_PUP_SS', 'AAA_HO_SS') and p.riskstatecd in ('PA','DC') then trunc(p.cancelnoticedate + 32) else trunc(p.cancelnoticedate + 13)  end = to_date('/EXECDATE/', 'DD-MON-YY') group by p.policynumber,p.RISKSTATECD,p.cancelnoticedate,p.productcd",
  PostValidation: "select policynumber from pasadm.policysummary where txtype in ('cancellation') and policystatuscd = 'cancelled' and timedpolicystatuscd = 'inForce' and currentrevisionind = 1 and txreason in ('20', '00001') and trunc(transactiondate) >= to_date('/EXECDATE/', 'DD-MON-YY')",
}
