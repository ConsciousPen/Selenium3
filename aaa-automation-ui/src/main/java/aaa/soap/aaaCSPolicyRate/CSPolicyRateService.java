
package aaa.soap.aaaCSPolicyRate;

import aaa.soap.AAAHTTPConfigurer;
import org.apache.cxf.Bus;
import org.apache.cxf.bus.CXFBusFactory;
import org.apache.cxf.transport.http.HTTPConduitConfigurer;
import org.mortbay.log.Log;
import toolkit.config.PropertyProvider;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "CSPolicyRateService", targetNamespace = "http://exigenservices.com/ipb/policy/integration", wsdlLocation = "http://nvdxpas2agl006:9095/aaa-admin/services/aaaCSPolicyRate?wsdl")
public class CSPolicyRateService extends Service {

	private final static URL CSPOLICYRATESERVICE_WSDL_LOCATION;
	private final static WebServiceException CSPOLICYRATESERVICE_EXCEPTION;
	private final static QName CSPOLICYRATESERVICE_QNAME = new QName("http://exigenservices.com/ipb/policy/integration", "CSPolicyRateService");

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			url = new URL(String.format("http://%1$s%2$s/aaa-admin/services/aaaCSPolicyRate?wsdl", PropertyProvider.getProperty("app.host"), PropertyProvider.getProperty("admin.port")));
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		Bus bus = CXFBusFactory.getThreadDefaultBus();
		HTTPConduitConfigurer conf = new AAAHTTPConfigurer("qa", "qa");
		Log.info("Logged as : qa");
		bus.setExtension(conf, HTTPConduitConfigurer.class);
		CSPOLICYRATESERVICE_WSDL_LOCATION = url;
		CSPOLICYRATESERVICE_EXCEPTION = e;
	}

	public CSPolicyRateService() {
		super(__getWsdlLocation(), CSPOLICYRATESERVICE_QNAME);
	}

	public CSPolicyRateService(WebServiceFeature... features) {
		super(__getWsdlLocation(), CSPOLICYRATESERVICE_QNAME, features);
	}

	public CSPolicyRateService(URL wsdlLocation) {
		super(wsdlLocation, CSPOLICYRATESERVICE_QNAME);
	}

	public CSPolicyRateService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, CSPOLICYRATESERVICE_QNAME, features);
	}

	public CSPolicyRateService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public CSPolicyRateService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * @return returns CSPolicyRatePort
	 */
	@WebEndpoint(name = "CSPolicyRatePort")
	public CSPolicyRatePort getCSPolicyRatePort() {
		return super.getPort(new QName("http://exigenservices.com/ipb/policy/integration", "CSPolicyRatePort"), CSPolicyRatePort.class);
	}

	/**
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
	 * @return returns CSPolicyRatePort
	 */
	@WebEndpoint(name = "CSPolicyRatePort")
	public CSPolicyRatePort getCSPolicyRatePort(WebServiceFeature... features) {
		return super.getPort(new QName("http://exigenservices.com/ipb/policy/integration", "CSPolicyRatePort"), CSPolicyRatePort.class, features);
	}

	private static URL __getWsdlLocation() {
		if (CSPOLICYRATESERVICE_EXCEPTION != null) {
			throw CSPOLICYRATESERVICE_EXCEPTION;
		}
		return CSPOLICYRATESERVICE_WSDL_LOCATION;
	}

}
